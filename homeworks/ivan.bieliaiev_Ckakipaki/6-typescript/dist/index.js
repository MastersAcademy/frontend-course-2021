(()=>{"use strict";const e=document.querySelector("[data-current-score]"),t=document.querySelector("[data-ball]"),r=document.querySelector("[data-changing]"),n=document.querySelector("[data-current-letter]"),c={currentScore:100,changing:0},o={letter:"",keyCode:0},a={width:300,height:300},i={start:!1,stop:!1};let s,d=!1;const h=()=>{const e=Math.floor(26*Math.random()+65);o.letter=String.fromCharCode(e),o.keyCode=e,n.innerText=o.letter,d=!1},u=e=>{switch(e){case"add":a.width+=10,a.height+=10;break;case"remove":a.width-=10,a.height-=10}t.style.width=`${a.width}px`,t.style.height=`${a.height}px`,t.style.borderRadius="50%"},l=(t,n,o)=>{const a=Math.floor(Math.random()*(o-n)+n);switch(t){case"correct":u("add"),c.currentScore+=a,r.innerText=`+ ${c.changing}`;break;case"wrong":u("remove"),c.currentScore-=a,r.innerText=`- ${c.changing}`;break;case"not":c.currentScore-=a,r.innerText=`- ${c.changing}`}c.changing=a,e.innerText=`${c.currentScore}`};addEventListener("keydown",(e=>{if(i.start){if(d=!0,e.preventDefault(),o.keyCode===e.keyCode?l("correct",5,10):l("wrong",20,25),h(),clearInterval(s),c.currentScore>=200)return S("win"),!0;if(c.currentScore<=0)return S("lose"),!0;g()}}));const g=()=>{s=setInterval((()=>(u("remove"),h(),l("not",10,15),c.currentScore>=200?(S("win"),!0):c.currentScore<=0?(S("lose"),!0):void 0)),2e3)};i.start=!0,i.stop=!1,h(),g();const S=t=>{switch(i.start=!1,i.stop=!0,clearTimeout(s),r.innerText="",t){case"win":e.innerText=`You win ${c.currentScore} points`,c.currentScore=100;break;case"lose":e.innerText="You lose"}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,